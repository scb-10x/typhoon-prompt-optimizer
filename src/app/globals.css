@import "tailwindcss";
@import "tailwindcss/utilities";

:root {
  --background: 220 100% 99%;
  --foreground: 222 47% 11%;
  --card: 0 0% 100%;
  --card-foreground: 222 47% 11%;
  --popover: 0 0% 100%;
  --popover-foreground: 222 47% 11%;
  --primary: 240 59% 58%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222 47% 11%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215 16% 47%;
  --accent: 280 65% 65%;
  --accent-foreground: 222 47% 11%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214 32% 91%;
  --input: 214 32% 91%;
  --ring: 240 59% 58%;
  --radius: 0.75rem;
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

body {
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
}

* {
  border-color: hsl(var(--border));
}

@layer utilities {
  .text-gradient {
    background: linear-gradient(to right, hsl(240, 59%, 58%), hsl(280, 65%, 65%));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .bg-gradient-primary {
    background: linear-gradient(135deg, hsl(240, 59%, 58%) 0%, hsl(280, 65%, 65%) 100%);
  }
  
  .bg-gradient-subtle {
    background: linear-gradient(135deg, hsl(220, 100%, 99%) 0%, hsl(250, 100%, 99%) 100%);
  }
  
  .bg-noise {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    background-position: center;
    background-size: cover;
    opacity: 0.05;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  
  /* Stripe-inspired card styling */
  .card-stripe {
    border-radius: var(--radius);
    border: 1px solid hsl(var(--border));
    background-color: hsl(var(--card));
    box-shadow: 
      0 1px 2px rgba(0, 0, 0, 0.06),
      0 1px 3px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .card-stripe:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  /* Stripe-like input styling */
  .input-stripe {
    border-radius: var(--radius);
    border: 1px solid hsl(var(--border));
    background-color: hsl(var(--card));
    padding: 0.75rem 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
  }
  
  .input-stripe:focus {
    border-color: hsl(var(--primary));
    box-shadow: 0 0 0 2px hsla(var(--primary), 0.2);
    outline: none;
  }
  
  /* Animated progress bar, similar to Stripe */
  @keyframes progress-stripe {
    0% {
      transform: translateX(-100%);
    }
    50% {
      transform: translateX(100%);
    }
    50.01% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }
  
  .animate-progress-stripe {
    animation: progress-stripe 2s infinite;
    background: linear-gradient(to right, 
      rgba(79, 70, 229, 0.2), 
      rgba(79, 70, 229, 1), 
      rgba(168, 85, 247, 1), 
      rgba(168, 85, 247, 0.2));
    background-size: 200% 100%;
    width: 100% !important;
  }
  
  /* Floating animations for decorative elements */
  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes float-reverse {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(15px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes float-slow {
    0% {
      transform: translateY(0px) translateX(0px);
    }
    50% {
      transform: translateY(-10px) translateX(10px);
    }
    100% {
      transform: translateY(0px) translateX(0px);
    }
  }
  
  @keyframes pulse-slow {
    0% {
      opacity: 0.1;
      transform: scale(1);
    }
    50% {
      opacity: 0.15;
      transform: scale(1.05);
    }
    100% {
      opacity: 0.1;
      transform: scale(1);
    }
  }
  
  /* Particle animations */
  @keyframes float-particle {
    0% {
      transform: translateY(0px) translateX(0px);
    }
    25% {
      transform: translateY(20px) translateX(10px);
    }
    50% {
      transform: translateY(40px) translateX(0px);
    }
    75% {
      transform: translateY(20px) translateX(-10px);
    }
    100% {
      transform: translateY(0px) translateX(0px);
    }
  }
  
  @keyframes float-particle-reverse {
    0% {
      transform: translateY(0px) translateX(0px);
    }
    25% {
      transform: translateY(-20px) translateX(-10px);
    }
    50% {
      transform: translateY(-40px) translateX(0px);
    }
    75% {
      transform: translateY(-20px) translateX(10px);
    }
    100% {
      transform: translateY(0px) translateX(0px);
    }
  }
  
  @keyframes float-particle-slow {
    0% {
      transform: translateY(0px) translateX(0px);
    }
    33% {
      transform: translateY(30px) translateX(20px);
    }
    66% {
      transform: translateY(15px) translateX(-20px);
    }
    100% {
      transform: translateY(0px) translateX(0px);
    }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-reverse {
    animation: float-reverse 7s ease-in-out infinite;
  }
  
  .animate-float-slow {
    animation: float-slow 10s ease-in-out infinite;
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 8s ease-in-out infinite;
  }
  
  .animate-float-particle {
    animation: float-particle 20s ease-in-out infinite;
  }
  
  .animate-float-particle-reverse {
    animation: float-particle-reverse 25s ease-in-out infinite;
  }
  
  .animate-float-particle-slow {
    animation: float-particle-slow 30s ease-in-out infinite;
  }
  
  /* Subtle hover effects */
  .hover-lift {
    transition: transform 0.2s ease-in-out;
  }
  
  .hover-lift:hover {
    transform: translateY(-2px);
  }
  
  .hover-glow {
    transition: box-shadow 0.2s ease-in-out;
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 15px rgba(var(--primary), 0.2);
  }
  
  /* Button shine animation */
  @keyframes shine {
    0% {
      background-position: -100% 50%;
    }
    100% {
      background-position: 200% 50%;
    }
  }
  
  @keyframes shimmer {
    100% {
      transform: translateX(100%);
    }
  }
  
  .animate-shine {
    animation: shine 2s ease-in-out;
  }
  
  .animate-shimmer {
    animation: shimmer 1.5s ease-in-out;
  }

  .shine-effect {
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.1) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    background-size: 200% 100%;
    animation: shine 3s infinite linear;
    pointer-events: none;
  }
}

.markdown-code-block {
  position: relative;
  background: #f9fafb;
  border-radius: 0.5rem;
  margin: 1rem 0;
  overflow: hidden;
  border: 1px solid rgba(229, 231, 235, 1);
}

.dark .markdown-code-block {
  background: #1f2937;
  border-color: rgba(55, 65, 81, 1);
}

.markdown-code-block pre {
  overflow-x: auto;
  padding: 1rem;
  font-size: 0.875rem;
  line-height: 1.7;
  scrollbar-width: thin;
  scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
  margin: 0;
  width: 100%;
}

.markdown-code-block pre::-webkit-scrollbar {
  height: 8px;
}

.markdown-code-block pre::-webkit-scrollbar-track {
  background: transparent;
}

.markdown-code-block pre::-webkit-scrollbar-thumb {
  background-color: rgba(156, 163, 175, 0.5);
  border-radius: 20px;
}

/* Ensure all overflow containers have consistent scrollbars */
.overflow-x-auto::-webkit-scrollbar {
  height: 8px;
}

.overflow-x-auto::-webkit-scrollbar-track {
  background: transparent;
}

.overflow-x-auto::-webkit-scrollbar-thumb {
  background-color: rgba(156, 163, 175, 0.5);
  border-radius: 20px;
}

/* Fix for long lines */
.overflow-x-auto {
  scrollbar-width: thin;
  scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
}